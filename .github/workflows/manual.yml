name: Duplicate Repository and Send Invite

on:
  workflow_dispatch:
    inputs:
      newRepoName:
        description: 'Name for the duplicated repository'
        required: true
      inviteeUsername:
        description: 'GitHub Username to send invite'
        required: true

jobs:
  duplicate_repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Create new GitHub repository
        run: |
          RESPONSE=$(curl -s -X POST \
          -H "Authorization: token ${{ secrets.GH_PAT }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/user/repos \
          -d '{"name":"${{ github.event.inputs.newRepoName }}", "private": false}')
          echo "$RESPONSE" > repo_response.json
          # Print out the response for diagnostic purposes, excluding potential token
          jq 'del(.token)' repo_response.json

      - name: Set up Git and push to new repository
        run: |
          NEW_REPO_GIT_URL=$(jq -r .clone_url repo_response.json)
          echo "Extracted URL: $NEW_REPO_GIT_URL"  # For debugging
          if [[ -z "$NEW_REPO_GIT_URL" ]]; then
            echo "Error: Failed to extract clone URL from response."
            exit 1
          fi
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git remote rename origin old-origin
          # Use token for HTTPS authentication
          git remote add origin "https://${{ secrets.GH_PAT }}@${NEW_REPO_GIT_URL#https://}"
          sleep 10  # Add a delay to ensure the repo is ready
          git push -u origin HEAD:main



      - name: Invite user to the new repository
        run: |
          REPO_FULL_NAME=$(jq -r .full_name repo_response.json)
          curl -s -X PUT \
          -H "Authorization: token ${{ secrets.GH_PAT }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/$REPO_FULL_NAME/collaborators/${{ github.event.inputs.inviteeUsername }} \
          -d '{"permission": "push"}'
